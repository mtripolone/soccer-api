openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
paths:
  /api/players:
    get:
      summary: Retrieve a list of players
      tags:
        - Player
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    level:
                      type: integer
                    goalkeeper:
                      type: boolean

    post:
      summary: Create a new player
      tags:
        - Player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                level:
                  type: integer
                  example: 3
                goalkeeper:
                  type: boolean
                  example: false
      responses:
        '201':
          description: Player created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  level:
                    type: integer
                  goalkeeper:
                    type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/players/{id}:
    get:
      summary: Retrieve a player by ID
      tags:
        - Player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Player details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  level:
                    type: integer
                  goalkeeper:
                    type: boolean
        '404':
          description: Player not found
    put:
      summary: Update a player
      tags:
        - Player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                level:
                  type: integer
                  example: 3
                goalkeeper:
                  type: boolean
                  example: false
      responses:
        '200':
          description: Player updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  level:
                    type: integer
                  goalkeeper:
                    type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Player not found
    delete:
      summary: Delete a player
      tags:
        - Player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Player deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Jogador excluído com sucesso.
        '404':
          description: Player not found
        '400':
          description: Error deleting player
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/attendances:
    get:
      summary: Retrieve a list of attendances
      tags:
        - Attendance
      responses:
        '200':
          description: A list of attendances
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    player_id:
                      type: integer
                    confirmed:
                      type: boolean

    post:
      summary: Create a new attendance
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: integer
                  example: 1
                confirmed:
                  type: boolean
                  example: true
      responses:
        '201':
          description: Attendance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  player_id:
                    type: integer
                  confirmed:
                    type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/attendances/{id}:
    get:
      summary: Retrieve an attendance by ID
      tags:
        - Attendance
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attendance details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  player_id:
                    type: integer
                  confirmed:
                    type: boolean
        '404':
          description: Attendance not found
    put:
      summary: Update an attendance
      tags:
        - Attendance
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmed:
                  type: integer
                  example: true
      responses:
        '200':
          description: Attendance updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  player_id:
                    type: integer
                  confirmed:
                    type: boolean
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Attendance not found
    delete:
      summary: Delete an attendance
      tags:
        - Attendance
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attendance deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Presença excluída com sucesso.
        '404':
          description: Attendance not found
        '400':
          description: Error deleting attendance
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/matches:
    post:
      summary: Create teams for a match
      tags:
        - Match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                players_per_team:
                  type: integer
                  example: 5
      responses:
        '201':
          description: Teams created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    team_id:
                      type: integer
                    players:
                      type: array
                      items:
                        type: object
                        properties:
                          player_id:
                            type: integer
                          name:
                            type: string
                          level:
                            type: integer
                          goalkeeper:
                            type: boolean
        '400':
          description: Error creating teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/team:
    get:
      summary: Retrieve a list of teams
      tags:
        - Team
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /api/team/{id}:
    get:
      summary: Retrieve a team by ID
      tags:
        - Team
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Team not found